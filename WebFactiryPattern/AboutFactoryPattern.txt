The factory design pattern in C# is used to replace class constructors, abstracting the process of object generation so that the
type of the object instantiated can be determined at run-time.


Where to Use It?

It is tedious when the client needs to specify the class name while creating the objects. So, to resolve this problem,
we can use Factory Method design pattern. It provides the client a simple way to create the object.

Factory method is a creational design pattern, i.e., related to object creation. In Factory pattern, 
we create object without exposing the creation logic to client and the client use the same common interface to
create new type of object.


The idea is to use a static member-function (static factory method) which creates & returns instances, hiding the details of class 
modules from user.

A factory pattern is one of the core design principles to create an object, 
allowing clients to create objects of a library(explained below) in a way such that it doesn’t have tight coupling with the 
class hierarchy of the library.


What is meant when we talk about library and clients?
A library is something which is provided by some third party which exposes some public APIs and clients make calls to those public APIs
to complete its task. A very simple example can be different kinds of Views provided by Android OS.

examples of Factory Method:

    Say, in a ‘Drawing’ system, depending on user’s input, different pictures like square, rectangle, circle can be drawn.
	Here we can use factory method to create instances depending on user’s input. For adding new type of shape,
	no need to change client’s code.

	Another example: In travel site, we can book train ticket as well bus tickets and flight ticket. 
	In this case user can give his travel type as ‘bus’, ‘train’ or ‘flight’.
	Here we have an abstract class ‘AnyTravel’ with a static member function ‘GetObject’ which depending on user’s travel type,
	will create & return object of ‘BusTravel’ or ‘ TrainTravel’. ‘BusTravel’ or ‘ TrainTravel’ have common functions like passenger name,
	Origin, destinationparameters.